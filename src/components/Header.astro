---
import ThemeToggle from '../components/ThemeToggle.astro';
import Language from '../components/Language.astro';
import Close from './Icons/Close.astro';
import Menu from './Icons/Menu.astro';

const navItems = [
    {    
   title:"Home",
   label:"home",
   url:"/#home"
    },
    {
        title:"Education",
        label:"education",
        url:"/#education"
    },
    {
        title:"Experience",
        label:"experience",
        url:"/#experience"
    },
    {
        title:"Projects",
        label:"projects",
        url:"/#projects"
    },
    {
        title:"About",
        label:"about",
        url:"/#about"
    },
    {
        title:"Contact",
        label:"contact",
        url:"mailto:andresvillarrealguti@gmail.com"
    }
]
---
<header  class="fixed top-0 z-10 flex items-center justify-center w-full mt-2">

  <!--
  flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center
   -->
    <nav 
    id="header-menu"
    class="fixed px-3 h-dvh inset-0 bg-[#151a36]/90 md:text-xl lg:text-xl flex flex-col items-center 
    justify-center gap-8 -translate-y-full transition-transform duration-300 target:translate-y-0 md:static 
    md:h-[initial] md:bg-[initial] md:flex-row md:translate-y-[initial] text-gray-800 dark:text-gray-200"
    
    
    >
        {
            navItems.map((link)=>(
                <a
                class="relative block px-2 py-2
                transition hover:text-yellow-600
                dark:hover:text-yellow-200
                
                " 
                aria-label={link.label}
                href={link.url}>
                {link.title}
                </a>

            ))
            
        }
<!--

<Language />
-->
        <ThemeToggle />
        <a href="#header-nav" class="md:hidden absolute top-6 right-6">
          <Close />
        </a>
    </nav>
    <a href="#header-menu" class="md:hidden" ><Menu/></a>
</header>

<script>
    document.addEventListener("astro:page-load", ()=>{
        const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-yellow-400")
            } else {
              item.classList.remove("text-yellow-400")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
    })
</script>

<style>
    nav{
        animation: nav-shadow 1s linear both;
        animation-timeline: scroll();
        animation-range: 0 100px;
    }
    @keyframes nav-shadow{
        to{
            @apply shadow-lg ring-1 backdrop-blur
            dark:bg-gray-800/90
            bg-white/50
            ring-white/10;
        }
    }
</style>
